## Simple generic config file for the EPIPHANY.

verbose "enter: ~/boards/epiphany.exp"

# Load the generic configuration for this board. This will define a basic set
# of routines needed by the tool to communicate with the board.
load_generic_config "sim"

# basic-sim.exp is a basic description for the standard Cygnus simulator.
load_base_board_description "basic-sim"

# Don't use the explicit name ...
#set_board_info sim "epiphany-elf-run"
# ... but prefer $pwd/sim/epiphany/run. (in unisrc build). if it exists.
setup_sim epiphany

# Simulate with lots of memory.
set_board_info gdb,target_sim_options " --e-coreid 0x808 --e-rows 1 --e-cols 1 --e-ext-ram-size 288"
set_board_info sim,options            " --e-coreid 0x808 --e-rows 1 --e-cols 1 --e-ext-ram-size 288"

# Not a slow simulator
set_board_info slow_simulator 0

# No multilib options
process_multilib_options ""

# We only support newlib on this
# target.  We assume that all multilib options have been specified
# before we get here.

# Compiler to use to build for this board.  This has nothing to do
# with what compiler is tested if we're testing gcc.
set_board_info compiler "[find_gcc]"

set_board_info cflags    "[libgloss_include_flags] [newlib_include_flags]"

# We don't have I/O.
set profiling_available_saved 0

## Some tests assume that they
## can malloc STACK_SIZE bytes, not counting malloc overhead.
#set_board_info gcc,stack_size 2000
# OTOH, a small stack size limits coverage, and besides, libstdc++-v3 tests
# disregard STACK_SIZE; some need more than 128 MB heap.  We should also
# expect to need up to 1 MB of stack for some tests. That's why the stack is
# placed in external memory.

set_board_info ldflags "[libgloss_link_flags] [newlib_link_flags] -Wl,--defsym=__text_start=0x0,--defsym=__heap_start=0x90000000,--defsym=__heap_end=0x9d000000,--defsym=__stack=0x9ffffff0"

# No linker script for this board.
set_board_info ldscript "-T[file dirname [info script]]/../fast.ldf"

# set_board_info target "epiphany"

# set_board_info is_simulator 1

# The simulator doesn't return exit statuses and we need to indicate this.
#set_board_info needs_status_wrapper 1

# Can't pass arguments to this target.
set_board_info noargs 1

# No signals.
# set_board_info gdb,nosignals 1

# And it can't call functions.
# set_board_info gdb,cannot_call_functions 1
